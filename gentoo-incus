#!/usr/bin/env bash

set -Eeuo pipefail

SCRIPTPATH="$( cd -- "$(dirname "$0")" &>/dev/null && pwd )"

declare GENTOO_INCUS_CACHE_DIR="${GENTOO_INCUS_CACHE_DIR:-/tmp/gentoo-distrobuilder}"
declare GENTOO_MIRROR="${GENTOO_MIRROR:-"https://mirrors.ustc.edu.cn/gentoo"}"

declare -a all_stage3=()
declare -A all_path=()
declare -A all_date=()
declare -A all_file=()
declare -A all_abi_profile_date=()
declare -A all_abi_profile=()
declare -A all_abi=()
declare -A all_init_system=()

declare -rA uname_to_gentoo_keyword=( ["x86_64"]="amd64" )
declare -rA gentoo_stage3_mask=( ["amd64"]="x32" ) # incus not support x32
declare keyword="${uname_to_gentoo_keyword[$(uname -m)]}"


declare -A args=(
    ["pretend"]=false
    ["instance_type"]="ctr"
)

die() {
    local msg=$1
    local code=${2:-1}
    echo >&2 -e "${msg}"
    exit "$code"
}

run() {
    if "${args[pretend]}"; then
        echo "$@"
    else
        "$@"
    fi
}

gentoo_stage3_info_fetch() {
    local latest_stage3_file="${GENTOO_INCUS_CACHE_DIR}/cache/$keyword/latest-stage3.txt"
    if ! find "$latest_stage3_file" -mtime +1 &> /dev/null; then
        mkdir -p "$(dirname "$latest_stage3_file")"
        local latest_stage3_url="${GENTOO_MIRROR}/releases/$keyword/autobuilds/latest-stage3.txt"
        wget --output-document="$latest_stage3_file" "$latest_stage3_url" >& /dev/null
    fi

    while read -r line ; do
        local path date file abi abi_profile abi_profile_date stage3 init_system
        # line: 20231217T170203Z/stage3-amd64-openrc-20231217T170203Z.tar.xz 285457092
        path="${line% *}"                               # 20231217T170203Z/stage3-amd64-openrc-20231217T170203Z.tar.xz
        date="$(dirname "$path")"                       # 20231217T170203Z
        file="$(basename "$path")"                      # stage3-amd64-openrc-20231217T170203Z.tar.xz
        abi_profile_date="${file%%.*}"                  # stage3-amd64-openrc-20231217T170203Z
        abi_profile="${abi_profile_date%-*}"            # stage3-amd64-openrc
        abi="${abi_profile#*-}"                         # amd64-openrc-20231217T170203Z
        abi="${abi%%-*}"                                # amd64
        stage3="${abi_profile_date#*-*-}"               # openrc-20231217T170203Z
        stage3="${stage3%-*}"                           # openrc
        if [[ $stage3 = *systemd* ]]; then
            init_system="systemd"
        else
            init_system="openrc"
        fi

        all_stage3+=( "$stage3" )
        all_path["$stage3"]="$path"
        all_date["$stage3"]="$date"
        all_file["$stage3"]="$file"
        all_abi_profile["$stage3"]="$abi_profile"
        all_abi_profile_date["$stage3"]="$abi_profile_date"
        all_abi["$stage3"]="$abi"
        all_init_system["$stage3"]="$init_system"
    done <<< "$(grep -E '^[0-9].*stage3' "$latest_stage3_file" | grep -vE "${gentoo_stage3_mask[$keyword]}")"
}

distrobuilder_run() {
    local stage3="$1"
    local type="${2:-${args[instance_type]}}"
    local image_name
    local template_filename target_dir
    local build_args=()
    local image_tarball
    local image_kvs

    # global flags
    build_args+=( '--debug' '--timeout' '3600' )

    image_name="${type}-${all_abi_profile_date["$stage3"]}"
    if ! incus image show "$image_name" &>/dev/null; then
        # build-incus
        template_filename="${SCRIPTPATH}/incus/images/${type}-${all_init_system["$stage3"]}.yaml"
        target_dir="${GENTOO_INCUS_CACHE_DIR}/cache/images"
        build_args+=( 'build-incus' "$template_filename" "$target_dir" )
        [ "$type" = "vm" ] && build_args+=( "--vm" )
        build_args+=( --type=unified )
        build_args+=( --compression xz )
        build_args+=( -o image.architecture="${all_abi[$stage3]}" )
        build_args+=( -o image.variant="${all_init_system["$stage3"]}" )
        build_args+=( -o image.serial="${all_date["$stage3"]}" )
        build_args+=( -o image.name="${image_name}" )
        build_args+=( -o source.variant="$stage3" )

        image_tarball="${target_dir}/${type}-${all_file[$stage3]}"
        image_kvs=(
            "user.gentoo.stage3.path=${all_path[$stage3]}"
            "user.gentoo.stage3.date=${all_date[$stage3]}"
            "user.gentoo.stage3.file=${all_file[$stage3]}"
            "user.gentoo.stage3.abi_profile_date=${all_abi_profile_date["$stage3"]}"
            "user.gentoo.stage3.abi_profile=${all_abi_profile["$stage3"]}"
            "user.gentoo.stage3.abi=${all_abi["$stage3"]}"
            "user.gentoo.init_system=${all_init_system["$stage3"]}"
        )

        run doas distrobuilder "${build_args[@]}"                 # TODO: doas or sudo or no password
        run incus image import --alias "$image_name" "$image_tarball" "${image_kvs[@]}"
        run incus config set "user.gentoo.image.latest.$type.$stage3=$image_name"
    else
        echo "Image $image_name exist, do nothing"
    fi
}

incus_check_type() {
    if [[ $# -gt 1 ]]; then
        case "$2" in
            vm|virtual-machine)
                args['instance_type']="vm"
                ;;
            ctr|container)
                args['instance_type']="ctr"
                ;;
            all)
                args['instance_type']="all"
                ;;
            *)
                die "Unknown instance type : $2"
                ;;
        esac
    else
        die "instance type request 1 parameter"
    fi
}

distrobuilder_run_all() {
    for s in "${@}"; do
        if [ "${args['instance_type']}" = "all" ]; then
            distrobuilder_run "$s" "ctr"
            distrobuilder_run "$s" "vm"
        else
            distrobuilder_run "$s"
        fi
    done
}

incus_image_build() {
    usage() {
        cat <<EOF
image build usage: TODO
EOF
        exit 1
    }

    gentoo_stage3_info_fetch

    local -n specified_stage3s
    local -a all_args
    while [[ $# -gt 0 ]]; do
        case "${1-}" in
            -h|--h)
                usage
                ;;
            -p|--pretend)
                args['pretend']=true
                shift
                ;;
            -t|--type)
                incus_check_type "$@"
                shift 2
                ;;
            -a|--all)
                specified_stage3s="all_stage3"
                shift
                ;;
            *)
                all_args=( "$@" )
                specified_stage3s="all_args"
                break
                ;;
        esac
    done

    distrobuilder_run_all "${specified_stage3s[@]}"
}

incus_image_update() {
    usage() {
        cat <<EOF
image update usage: TODO
EOF
        exit 1
    }

    gentoo_stage3_info_fetch

    local -n specified_stage3s
    local -a all_args
    while [[ $# -gt 0 ]]; do
        case "${1-}" in
            -h|--h)
                usage
                ;;
            -p|--pretend)
                args['pretend']=true
                shift
                ;;
            -t|--type)
                incus_check_type "$@"
                shift 2
                ;;
            -a|--all)
                specified_stage3s="all_stage3"
                shift
                ;;
            *)
                all_args=( "$@" )
                specified_stage3s="all_args"
                break
                ;;
        esac
    done

    for s in "${specified_stage3s[@]}"; do
        local value
        value=$(incus config get "user.gentoo.image.latest.${args[instance_type]}.$s")
        if [ -n "$value" ]; then
            local cur="${all_abi_profile_date[$s]}"
            if [[ "$value" > "$cur" ]]; then
                distrobuilder_run_all "$s"
            fi
        fi
    done
}

incus_image_list() {
    usage() {
        cat <<EOF
image list: TODO
EOF
        exit 1
    }
    while [[ $# -gt 0 ]]; do
        case "${1-}" in
            -h|--h)
                usage
                ;;
            -t|--type)
                incus_check_type "$@"
                shift 2
                ;;
            *)
                echo "incus image list unknown option: $1"
                usage
                ;;
        esac
    done

    local key
    case "${args['instance_type']}" in
        all)
            key="-stage3-"
            ;;
        ctr)
            key="crt-stage3-"
            ;;
        vm)
            key="vm-stage3-"
            ;;
        *)
            die "incus image list: TODO"
            ;;
    esac
    incus image list -- "$key"
}

incus_image() {
    usage() {
        cat <<EOF
image usage: TODO
EOF
        exit 1
    }
    while [[ $# -gt 0 ]]; do
        case "${1-}" in
            -h|--h)
                usage
                ;;
            build)
                shift
                incus_image_build "$@"
                break
                ;;
            update)
                shift
                incus_image_update "$@"
                break
                ;;
            list)
                shift
                incus_image_list "$@"
                break
                ;;
            rm|remove)
                echo "TODO"
                shift
                ;;
            *)
                echo "Image Unknown Commnad: $1"
                usage
                ;;
        esac
    done
}

incus_exec() {
    echo "Unknown Commnad: $1"
}

incus_create() {
    echo "incus_create"
}

incus_launch() {
    echo "incus_launch"
}

incus_copy() {
    echo "incus_copy"
}
incus_update() {
    echo "incus_update"
}

incus_list() {
    echo "incus_list"
}

main() {
    usage() {
        cat <<EOF
usage: TODO
EOF
        exit 1
    }
    while [[ $# -gt 0 ]]; do
        case "${1-}" in
            -h|--h)
                usage
                ;;
            image)
                shift
                incus_image "$@"
                break
                ;;
            create)
                shift
                incus_create "$@"
                break
                ;;
            launch)
                shift
                incus_launch "$@"
                break
                ;;
            update)
                shift
                incus_update "$@"
                break
                ;;
            list)
                shift
                incus_list "$@"
                break
                ;;
            copy)
                shift
                incus_copy "$@"
                break
                ;;
            exec)
                shift
                incus_exec "$@"
                break
                ;;
            *)
                echo "Unknown Commnad: $1"
                usage
                ;;
        esac
    done
}

main "$@"
